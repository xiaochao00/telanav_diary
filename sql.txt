关闭 postgres 数据库连接
SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname='UniDB_HERE_NA17Q1_1.0.0.477938-20170207020603-RC' and pid<>pg_backend_pid();

移动数据库 表空间
ALTER DATABASE {database} SET tablespace {tablespace};
ALTER DATABASE "HERE_NA17Q2" SET tablespace ssd1;

查看所有表空间
select spcname, pg_tablespace_location(oid) from pg_tablespace;
查看默认表空间目录
show data_directory;


查询所有数据库 
SELECT datname FROM pg_database;

查询所有schema
SELECT * FROM information_schema.schemata ;

COPY
psql -U postgres -d tollcost -c "\COPY (SELECT ...) TO '/tmp/a.txt' WITH CSV DELIMITER '`' "
psql -U postgres -d tollcost -c "\copy public.mapping from E'C:\\Windows\\System32\\dump_mapping_20180413.csv'  delimiter '`' csv header encoding 'utf8' "



查询数据库和tablespace对应关系
SELECT d.datname as "Name",
r.rolname as "Owner",
pg_catalog.pg_encoding_to_char(d.encoding) as "Encoding",
pg_catalog.shobj_description(d.oid, 'pg_database') as "Description",
t.spcname as "Tablespace"
FROM pg_catalog.pg_database d
JOIN pg_catalog.pg_roles r ON d.datdba = r.oid
JOIN pg_catalog.pg_tablespace t on d.dattablespace = t.oid
ORDER BY 1;


备份数据库表结构
pg_dump -d geo_analyse -U postgres -s > geo_analyse_DB_back.sql
-s 只备份表结构
psql -d geo_analyse -U postgres -c " \COPY(SELECT * FROM analyse_city WHERE region='CN') TO  '/tmp/cn_analyse_city.csv' "

psql -U postgres -d "UniDB_NT_CN_17Q2_1.0.0.517136-20171018165616-RC" -c "\COPY ( SELECT * FROM nodes WHERE tags->'type'='admin_center' ORDER BY tags->'name:chi') TO '/tmp/nav_admin_center_nodes.txt' DELIMITER '\`'"

还原数据库
createdb newDBname
psql -d newDBname -U postgres -f dump.sql

还原表数据
psql -U postgres -d geo_analyse -c " COPY analyse_city FROM '/home/mapuser/workspace_users/web_tool/geo_analysis/cn_analyse_city.csv'"

备份：
/usr/local/pgsql/bin/pg_dump --verbose -Fc --file=${backup} --compress=5 ${db_name} > ${backup}.log 2>&1
还原：
pg_restore -U postgres -d "UniDB_HERE_TWN17Q4_1.0.0.524243-20171220035701-RC" UniDB_HERE_TWN17Q4_1.0.0.524243-20171220035701-RC_2018032104.bak


查看表的所有索引：
select * from pg_indexes where tablename='ways';



Split:
SELECT tags->'type:lanes' FROM ways_sh 
WHERE tags?'type:lanes' AND '0' IN (SELECT * FROM regexp_split_to_table(tags->'type:lanes', '\|') )  LIMIT 10;

查询 点坐标的包含关系

SELECT * FROM adminboundary.combine_adminarea WHERE  st_contains(st_scale(geom, 1.0/3600, 1.0/3600), 'POINT(116.0599596 21.0809069)'::geometry);

SELECT * FROM ways WHERE st_intersects(linestring, ST_SetSRID('POINT(113.5544481 22.1073119)'::geometry, 4326));

坐标 转文本
select ST_AsText(geom) from mifg.plateres_group limit 10;

点包含在线上
SELECT  distinct ST_Contains(geom ,st_point(118.19193,29.7902))as f from mifg.plateres_group ;
点
POINT(118.19193 29.7902)

查找距离最近的ways
select road from roadsegment where ad_code like '11%' order by ST_Distance(ST_Scale(geom, 1/3600.0, 1/3600.0),'POINT(116.668589976111 40.0251228638889)'::geometry) limit 1;


创建索引
CREATE INDEX "idx_member_id" ON relation_members(member_id);

CREATE INDEX gist_ways ON ways USING gist(linestring);

CREATE INDEX gist_nodes ON nodes using gist(geom);

CREATE INDEX "rm_mi_idx" ON relation_members USING  btree (member_id);
CREATE INDEX "rm_ri_idx" ON relation_members USING  btree (relation_id);

点与点的距离
select id, tags, st_astext(geom)
FROM nodes WHERE tags->'type'='address_point'
ORDER BY 
ST_Distance(
	ST_SetSRID(ST_MakePoint(121.403023, 31.208761),4326)::geography,
	geom
)
LIMIT 10;


线与线 contains:
SELECT st_contains(linestring, 'srid=4326;LINESTRING(113.3172937 40.2162673,113.3172505 40.2163542,113.3172013 40.2164758,113.3171918 40.2165404,113.3171916 40.2166103,113.3172034 40.2166774,113.3172225 40.2167378,113.3172778 40.2168588,113.3173455 40.2169762,113.3175721 40.217318,113.3178636 40.2177828,113.3178969 40.2178348,113.3179313 40.2178965,113.3179582 40.2179601,113.317977 40.2180194,113.3179841 40.2180746,113.3179867 40.2181435,113.3179773 40.2182026,113.3179598 40.2182668,113.3179094 40.218387,113.3176793 40.2188652,113.3175704 40.2191047,113.3175191 40.2192246,113.3174849 40.2193458,113.3174881 40.2194751,113.3175051 40.2195391,113.3175343 40.219598,113.3175775 40.2196593,113.3176295 40.2197109,113.3177502 40.2197985,113.317892 40.2198656,113.3180518 40.2199094,113.3182203 40.2199115,113.3183849 40.2198595,113.3185237 40.2197779,113.3188711 40.2194952,113.3189883 40.2194069,113.3191113 40.219327,113.3192562 40.2192667,113.3194177 40.2192577,113.3195596 40.2193011,113.3199525 40.2195444,113.3202104 40.2197088,113.3204744 40.2198688,113.3206096 40.2199426,113.3208999 40.2200723,113.3212006 40.2201925,113.3213525 40.2202349,113.3215234 40.2202596,113.3216872 40.2202606,113.3218487 40.2202431,113.3221757 40.2201914,113.3223364 40.2201701,113.3224959 40.2201608,113.3226565 40.2201708,113.3228159 40.2202074,113.3229529 40.2202706,113.3230741 40.2203636,113.3231563 40.2204676,113.3232102 40.2205811,113.3232406 40.2207101,113.3232647 40.2209652,113.323303 40.2214646,113.3233263 40.2217046,113.323341 40.2219646,113.3233443 40.2220095)'::geometry) FROM ways WHERE id=677955936100;



replace(ST_AsLatLonText(ST_PointN(linestring, 2), 'D.DDDDDD'), ' ', ',')